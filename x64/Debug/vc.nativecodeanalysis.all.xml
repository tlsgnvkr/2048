<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>checkGameOver</FUNCTION>
    <DECORATED>?checkGameOver@@YAHXZ</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>93</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>checkGameOver</FUNCTION>
    <DECORATED>?checkGameOver@@YAHXZ</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>122</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>left</FUNCTION>
    <DECORATED>?left@@YAXXZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>122</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>left</FUNCTION>
    <DECORATED>?left@@YAXXZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>125</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>left</FUNCTION>
    <DECORATED>?left@@YAXXZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>128</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>left</FUNCTION>
    <DECORATED>?left@@YAXXZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>129</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>left</FUNCTION>
    <DECORATED>?left@@YAXXZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>130</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>left</FUNCTION>
    <DECORATED>?left@@YAXXZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>left</FUNCTION>
    <DECORATED>?left@@YAXXZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>149</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>right</FUNCTION>
    <DECORATED>?right@@YAXXZ</DECORATED>
    <FUNCLINE>140</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>149</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>right</FUNCTION>
    <DECORATED>?right@@YAXXZ</DECORATED>
    <FUNCLINE>140</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>right</FUNCTION>
    <DECORATED>?right@@YAXXZ</DECORATED>
    <FUNCLINE>140</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>right</FUNCTION>
    <DECORATED>?right@@YAXXZ</DECORATED>
    <FUNCLINE>140</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>right</FUNCTION>
    <DECORATED>?right@@YAXXZ</DECORATED>
    <FUNCLINE>140</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>right</FUNCTION>
    <DECORATED>?right@@YAXXZ</DECORATED>
    <FUNCLINE>140</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>153</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>right</FUNCTION>
    <DECORATED>?right@@YAXXZ</DECORATED>
    <FUNCLINE>140</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>176</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>up</FUNCTION>
    <DECORATED>?up@@YAXXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>176</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>up</FUNCTION>
    <DECORATED>?up@@YAXXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>179</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>up</FUNCTION>
    <DECORATED>?up@@YAXXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>182</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>up</FUNCTION>
    <DECORATED>?up@@YAXXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>183</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>up</FUNCTION>
    <DECORATED>?up@@YAXXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>184</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>up</FUNCTION>
    <DECORATED>?up@@YAXXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>180</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>up</FUNCTION>
    <DECORATED>?up@@YAXXZ</DECORATED>
    <FUNCLINE>167</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>203</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>down</FUNCTION>
    <DECORATED>?down@@YAXXZ</DECORATED>
    <FUNCLINE>194</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>203</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>down</FUNCTION>
    <DECORATED>?down@@YAXXZ</DECORATED>
    <FUNCLINE>194</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>206</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>down</FUNCTION>
    <DECORATED>?down@@YAXXZ</DECORATED>
    <FUNCLINE>194</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>209</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>down</FUNCTION>
    <DECORATED>?down@@YAXXZ</DECORATED>
    <FUNCLINE>194</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>210</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>down</FUNCTION>
    <DECORATED>?down@@YAXXZ</DECORATED>
    <FUNCLINE>194</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>211</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>down</FUNCTION>
    <DECORATED>?down@@YAXXZ</DECORATED>
    <FUNCLINE>194</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\shinh\WorkSpace\Project\2048_C++\</FILEPATH>
      <FILENAME>2048_C++.cpp</FILENAME>
      <LINE>207</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>down</FUNCTION>
    <DECORATED>?down@@YAXXZ</DECORATED>
    <FUNCLINE>194</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>